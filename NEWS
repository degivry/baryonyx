= baryonyx
Gauthier Quesnel <gauthier.quesnel@inra.fr>

== baryonyx v0.3.0.0 - 2017-??-??

solver::

* Update solver and main to enable the use of float (4 bytes), double (8 bytes)
  or long double (16 bytes for x86_64) for reduce costs, kappa, delta and
  preference matrix etc. Default is the use of double. To change the solver
  internal representation use the following command:

   $ baryonyx [...] --param floating-point-type=float|double|longdouble

* For constraints matrix A, add new static order for constraints (`-p
  preprocessing=option`) where option is defined as:
** `none` (default): use the lp format constraint order.
** `less,greater,equal` or `greater,less,equal` or any other form: use the type
   of operator
** `variables-number` (experimental): use number variable links.
** `variables-weight` (experimental): sort variables weights (sum variable
   appearance in all constraints).
** `constraints-weight` (experimental): use number constraint links.

* Add push system for solving process
* Add parameters in solution file
* Show violated constraints in solve mode

core::

* Objective function now use double instead of integer.

* Replace `serialize` with `print-level` in option to show information (e.g.
  with `print-level=1` with the solve mode, violated constraints are displayed.


== baryonyx v0.2.2.0 - 2017-10-13

preprocessor::

* fix the greedy constraints/variables remover

solver::

* fix crash when constraints or variables vector are empty

== baryonyx v0.2.1.0 - 2017-10-06

solver::

* switch back to infinity norm instead of none
* adding l+oo norm after the rng norm
* fix parameters in console output (show optimization parameters only in
  optimization mode)
* fix typo in parameters

core::

* rewrite the help message and add all parameters
* fix the --check|-C option

preprocessor::

* fix objective function cleanup

== baryonyx v0.2.0.0 - 2017-10-03

solver::

* Add a new parameter norm (-p norm:string):

** `none`: no normalization
** `l1`: l1 norm (sum of absolute cost / cost number)
** `l2`: l2 norm (sum of cost * cost / cost number)
** `inf`: l+oo norm (max cost / cost number)
** `rng`: a complex experimental norm

* Add an external solution checker. Use the `--check|-C [filename]` command
  line option to valid a `.sol` result with an another algorithm.
* Improve debug log facilities. If baryonyx:
** is compiled without `BARYONYX_FULL_OPTIMIZATION`
** have verbose level = 7 (`baryonyx-0.2 -v 7`)
** have serialize option = 2 (`baryonyx-0.2 -v 7 -p serialize=2`)
* Then the log facilities show:
** current X solution with variable names compute() [`serialize >= 1`]
** all constraints status for each compute() [`serialize >= 1`]
** P matrix between for each update_row() [`serialize >= 2`]

* Write temporary solutions during optimization process
* Fix push system using cost vector
* Show variable names into dump
* Remove the inversion of the matrix A for negative coefficient
* Remove random gap to zero
* Use `std::sort` in full optimization, `std::stable_sort` otherwise

preprocessor::

Remove more constraints and variable

* Remove constraints and affects variables:

```
 x + y + z = 0
 x + y + z = 3
 x + y + z >= 3
 x + y + z <= 0
```

* Remove constraints:

```
x + y + z >= 0
x + y + z <= 3
```

* Remove multiple elements in objective function or constraints:

```
 x1 + x2 + x3 + x2 becomes x1 + 2x2 + x3).
```

* Remove null factor elements in objective function or constraints:

```
x1 + x2 becomes x2
```

* Remove affected variables in bounds or in constraints
* Remove duplicated constraints

core::

* Replace `long int` with `int`. The int or std::int32_t type to reference
  array index, variable index seems to be sufficient for all source code.

* Improve read with more 'subject to' syntax. This patch allows parser to read
  lp file with `subject to[:]` syntax.
